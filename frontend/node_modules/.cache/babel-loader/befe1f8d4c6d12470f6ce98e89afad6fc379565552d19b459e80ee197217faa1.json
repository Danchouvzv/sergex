{"ast":null,"code":"var _jsxFileName = \"/Users/danial/Downloads/decentra2025-main/frontend/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000';\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  error: null\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n      try {\n        const response = await axios.get(`${API_URL}/auth/me`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Authentication error:', error);\n        localStorage.removeItem('access_token');\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      formData.append('username', email);\n      formData.append('password', password);\n      const response = await axios.post(`${API_URL}/auth/login`, formData);\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('access_token', access_token);\n      const userResponse = await axios.get(`${API_URL}/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${access_token}`\n        }\n      });\n      setUser(userResponse.data);\n      setIsLoading(false);\n      navigate('/');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed. Please check your credentials.');\n      setIsLoading(false);\n    }\n  };\n  const register = async (fullName, email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      await axios.post(`${API_URL}/auth/register`, {\n        full_name: fullName,\n        email,\n        password\n      });\n      await login(email, password);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed. Please try again.');\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setUser(null);\n    navigate('/login');\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    register,\n    logout,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"IUiUaaA40XQn0M3q8Pq2fGHPthU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","API_URL","AuthContext","user","isAuthenticated","isLoading","login","register","logout","error","AuthProvider","children","_s","setUser","setIsLoading","setError","navigate","checkAuth","token","localStorage","getItem","response","get","headers","Authorization","data","console","removeItem","email","password","formData","FormData","append","post","access_token","setItem","userResponse","_error$response","_error$response$data","detail","fullName","full_name","_error$response2","_error$response2$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/danial/Downloads/decentra2025-main/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst API_URL = 'http://localhost:8000';\n\n\ninterface User {\n  id: string;\n  email: string;\n  full_name: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (fullName: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  error: string | null;\n}\n\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  error: null,\n});\n\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  \n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        const response = await axios.get(`${API_URL}/auth/me`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setUser(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Authentication error:', error);\n        localStorage.removeItem('access_token');\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  \n  const login = async (email: string, password: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n     \n      const formData = new FormData();\n      formData.append('username', email);\n      formData.append('password', password);\n\n      const response = await axios.post(`${API_URL}/auth/login`, formData);\n      const { access_token } = response.data;\n\n      \n      localStorage.setItem('access_token', access_token);\n\n      \n      const userResponse = await axios.get(`${API_URL}/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      });\n\n      setUser(userResponse.data);\n      setIsLoading(false);\n      navigate('/');\n    } catch (error: any) {\n      console.error('Login error:', error);\n      setError(error.response?.data?.detail || 'Login failed. Please check your credentials.');\n      setIsLoading(false);\n    }\n  };\n\n  \n  const register = async (fullName: string, email: string, password: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      await axios.post(`${API_URL}/auth/register`, {\n        full_name: fullName,\n        email,\n        password,\n      });\n\n      \n      await login(email, password);\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      setError(error.response?.data?.detail || 'Registration failed. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  \n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setUser(null);\n    navigate('/login');\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    register,\n    logout,\n    error,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}